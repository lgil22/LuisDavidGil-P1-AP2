@page "/Productos"
@using Blazored.Toast;
@using LuisDavidGil_P1_AP2.Models
@using LuisDavidGil_P1_AP2.BLL
@inject IToastService Toast


    <EditForm Model="productos" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
     
        <section class="form-register">


            <div class="card">
                <div class="card-header">
                    <h3>Registro de Productos</h3>
                </div>

                <div class="card-body">
                    <div class="form-group">
                        <label>ID</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="productos.id" class="form-control" />
                            <ValidationMessage For="(() => productos.id)"></ValidationMessage>
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        <label>Descripción</label>
                        <InputText @bind-Value="productos.Descripcion" class="form-control" />
                        <ValidationMessage For="@(() => productos.Descripcion)" />
                    </div>

                    <div class="form-group">
                        <label>Existencia</label>
                        <InputNumber @bind-Value="productos.Existencia" @onclick="Inventario" class="form-control" />
                        <ValidationMessage For="@(() => productos.Existencia)" />
                    </div>


                    <div class="form-group">
                        <label>Costo</label>
                        <InputNumber @bind-Value="productos.Costo" @onclick="Inventario" class="form-control" />
                        <ValidationMessage For="@(() => productos.Costo)" />
                    </div>


                    <div class="form-group">
                        <label>Valor Inventario</label>
                        <InputNumber @bind-Value="productos.ValorInventario" class="form-control" readonly="true" />
                        <ValidationMessage For="@(() => productos.ValorInventario)" />
                    </div>


                    <!--Buttons--->

                    <div class="form-group text-center" display: inline-block>
                        <div class="btn-group mr-5" role="group" aria-label="First group">
                            <button type="button" class="btn btn-outline-secondary" @onclick="Nuevo">Nuevo</button>
                        </div>
                        <div class="btn-group mr-5" role="group" aria-label="Second group">
                            <button type="submit" class="btn btn-outline-success"> Guardar</button>
                        </div>

                        <div class="btn-group" role="group" aria-label="Third group">
                            <button type="button" class="btn btn-outline-danger" @onclick="Eliminar">Eliminar</button>
                        </div>
                    </div>
                </div>
            </div>
          
        </section>

    </EditForm>

@code{
    Productos productos = new Productos();

    [Parameter]
    public int id { get; set; }

    protected override void OnInitialized()
    {
        Nuevo();
        Productos AuxProducto;
        if (id > 0)
        {
            AuxProducto = ProductosBLL.Buscar(id);
            if (AuxProducto != null)
                productos = AuxProducto;
            else
                Toast.ShowInfo("No encontrado..");
        }
    }

    private void Nuevo()
    {
        productos = new Productos();
    }

    private void Inventario()
    {
        decimal operacion = (productos.Existencia * productos.Costo);
        productos.ValorInventario = operacion;
    }

    private void Guardar()
    {
        bool guardado;

        guardado = ProductosBLL.Guardar(productos);

        if (guardado)
        {
            Nuevo();
            Toast.ShowSuccess("Se ha Guardado Exitosamente");
        }
        else
            Toast.ShowError("Error, no se pudo Guardar");
    }

    private void Buscar()
    {
        if (productos.id > 0)
        {
            var encontrado = ProductosBLL.Buscar(productos.id);
            if (encontrado != null)
            {
                productos = encontrado;
                Toast.ShowSuccess("Se a Encontrado el producto");
            }
            else
                Toast.ShowWarning("No se pudo ecnontrar el producto indicado");
        }
    }

    private void Eliminar()
    {
        bool elimino;

        elimino = ProductosBLL.Eliminar(productos.id);

        if (elimino)
        {
            Nuevo();
            Toast.ShowSuccess("Se a Eliminado Exitosamente");
        }
        else
            Toast.ShowError("No se pudo ecnontrar el producto indicado");
    }

}